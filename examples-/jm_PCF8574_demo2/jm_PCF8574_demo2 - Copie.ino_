
#define __PROG__ "jm_PCF8574_demo2"

////////////////////////////////////////////////////////////////////////////////

#include <Wire.h>

////////////////////////////////////////////////////////////////////////////////

#include <jm_PCF8574.h>

jm_PCF8574 PCF8574(0x3F);

////////////////////////////////////////////////////////////////////////////////

class jm_C2004A : Print
{
private:
	bool _rd;
	bool _rs;

	bool command_db7654(uint8_t db7654);

protected:

public:
	jm_C2004A();

	operator bool();

	virtual size_t write(uint8_t value);

	using Print::write;
};

jm_C2004A::jm_C2004A() :
	_rd(false),
	_rs(false)
{
}

jm_C2004A::operator bool()
{
	return true;
}

bool jm_C2004A::command_db7654(uint8_t db7654)
{
	uint8_t s[] = {0b1000,0b1100,0b1000};

	for (int i=0; i<sizeof(s); i++) s[i] |= db7654;

	return (PCF8574.write((const uint8_t *) &s, sizeof(s)) == sizeof(s));
}

size_t jm_C2004A::write(uint8_t value)
{
	delay(40);

//	uint8_t s1[] = {
//		(0b0011<<4)|0b1000,(0b0011<<4)|0b1100,(0b0011<<4)|0b1000
//	};

//	if (PCF8574.write((const uint8_t *)&s1, sizeof(s1)) != sizeof(s1)) return 0;
	if (!command_db7654(0b0011<<4)) return 0;

	delayMicroseconds(4100);

//	if (PCF8574.write((const uint8_t *)&s1, sizeof(s1)) != sizeof(s1)) return 0;
	if (!command_db7654(0b0011<<4)) return 0;

//	delayMicroseconds(100);

//	if (PCF8574.write((const uint8_t *)&s1, sizeof(s1)) != sizeof(s1)) return 0;
	if (!command_db7654(0b0011<<4)) return 0;

//	delayMicroseconds(100);

//	uint8_t s2[] = {
//		(0b0010<<4)|0b1000,(0b0010<<4)|0b1100,(0b0010<<4)|0b1000
//	};

//	if (PCF8574.write((const uint8_t *)&s2, sizeof(s2)) != sizeof(s2)) return 0;
	if (!command_db7654(0b0010<<4)) return 0;

//	delayMicroseconds(100);

	// Set display lines and character font...

	uint8_t s3[] = {
		(0b0010<<4)|0b1000,(0b0010<<4)|0b1100,(0b0010<<4)|0b1000
		,
		(0b1000<<4)|0b1000,(0b1000<<4)|0b1100,(0b1000<<4)|0b1000
	};

	if (PCF8574.write((const uint8_t *)&s3, sizeof(s3)) != sizeof(s3)) return 0;

//	delayMicroseconds(100);

	// Display off...

	uint8_t s4[] = {
		(0b0000<<4)|0b1000,(0b0000<<4)|0b1100,(0b0000<<4)|0b1000
		,
		(0b1000<<4)|0b1000,(0b1000<<4)|0b1100,(0b1000<<4)|0b1000
	};

	if (PCF8574.write((const uint8_t *)&s4, sizeof(s4)) != sizeof(s4)) return 0;

//	delayMicroseconds(100);

	// Display clear...

	uint8_t s5[] = {
		(0b0000<<4)|0b1000,(0b0000<<4)|0b1100,(0b0000<<4)|0b1000
		,
		(0b0001<<4)|0b1000,(0b0001<<4)|0b1100,(0b0001<<4)|0b1000
	};

	if (PCF8574.write((const uint8_t *)&s5, sizeof(s5)) != sizeof(s5)) return 0;

//	delayMicroseconds(100);

	// Entry mode set...

	uint8_t s6[] = {
		(0b0000<<4)|0b1000,(0b0000<<4)|0b1100,(0b0000<<4)|0b1000
		,
		(0b0110<<4)|0b1000,(0b0110<<4)|0b1100,(0b0110<<4)|0b1000
	};

	if (PCF8574.write((const uint8_t *)&s6, sizeof(s6)) != sizeof(s6)) return 0;

//	delayMicroseconds(100);

	// Display on...

	uint8_t s7[] = {
		(0b0000<<4)|0b1000,(0b0000<<4)|0b1100,(0b0000<<4)|0b1000
		,
		(0b1111<<4)|0b1000,(0b1111<<4)|0b1100,(0b1111<<4)|0b1000
	};

	if (PCF8574.write((const uint8_t *)&s7, sizeof(s7)) != sizeof(s7)) return 0;


	// Write ABCD...

	uint8_t s[] = {
		0b1001
		,
		(('A'&0xF0)<<0)|0b1001,(('A'&0xF0)<<0)|0b1101,(('A'&0xF0)<<0)|0b1001,
							   (('A'&0x0F)<<4)|0b1101,(('A'&0x0F)<<4)|0b1001
		,
		(('B'&0xF0)<<0)|0b1001,(('B'&0xF0)<<0)|0b1101,(('B'&0xF0)<<0)|0b1001,
							   (('B'&0x0F)<<4)|0b1101,(('B'&0x0F)<<4)|0b1001
		,
		(('C'&0xF0)<<0)|0b1001,(('C'&0xF0)<<0)|0b1101,(('C'&0xF0)<<0)|0b1001,
							   (('C'&0x0F)<<4)|0b1101,(('C'&0x0F)<<4)|0b1001
		,
		(('D'&0xF0)<<0)|0b1001,(('D'&0xF0)<<0)|0b1101,(('D'&0xF0)<<0)|0b1001,
							   (('D'&0x0F)<<4)|0b1101,(('D'&0x0F)<<4)|0b1001
		,
		0b1000
	};

	if (PCF8574.write((const uint8_t *)&s, sizeof(s)) != sizeof(s)) return 0;

	return 1;
}

jm_C2004A C2004A;

////////////////////////////////////////////////////////////////////////////////

void setup()
{
	Serial.begin(115200);
	while (!Serial && millis()<3000); // wait for USB Serial ready
	Serial.print(F(__PROG__));
	Serial.print(F("..."));
	Serial.println();

	Wire.begin();

	PCF8574.begin();
/*
	Serial.print(F("portRead()"));
	Serial.print(F("="));
	Serial.println(PCF8574.portRead(), HEX);

	PCF8574.portMode(OUTPUT);
	Serial.print(F("portWrite(0xF8)"));
	Serial.println(PCF8574.portWrite(0xF8), HEX);

	Serial.print(F("portRead()"));
	Serial.print(F("="));
	Serial.println(PCF8574.portRead(), HEX);

	Serial.print(F("read()"));
	Serial.print(F("="));
	Serial.println(PCF8574.read(), HEX);

	for (uint8_t pin=0; pin<8; pin++) {
		PCF8574.pinMode(pin, INPUT_PULLUP);
		Serial.print(F("digitalRead("));
		Serial.print(pin);
		Serial.print(F(")"));
		Serial.print(F("="));
		Serial.println(PCF8574.digitalRead(pin), HEX);
	}

	Serial.println();

	PCF8574.pinMode((uint8_t)3, OUTPUT);
	for (int i=0; i<10; i++) {
		//
		Serial.print(F("digitalWrite("));
		Serial.print((uint8_t)3);
		Serial.print(F(","));
		Serial.print(LOW);
		Serial.print(F(")"));
		Serial.println();
		for (int i=0; i<50; i++) PCF8574.wait((uint16_t)1000);
//		Serial.println(PCF8574.digitalWrite((uint8_t)3, LOW));
		PCF8574.digitalWrite((uint8_t)3, LOW);
		//
		Serial.print(F("digitalWrite("));
		Serial.print((uint8_t)3);
		Serial.print(F(","));
		Serial.print(HIGH);
		Serial.print(F(")"));
		Serial.println();
		for (int i=0; i<50; i++) PCF8574.wait((uint16_t)1000);
//		Serial.println(PCF8574.digitalWrite((uint8_t)3, HIGH));
		PCF8574.digitalWrite((uint8_t)3, HIGH);
	}

	Serial.println();
*/
	C2004A.write('A');
}

void loop()
{
}
